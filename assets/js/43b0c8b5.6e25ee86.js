"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[64004],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(r),d=i,y=f["".concat(s,".").concat(d)]||f[d]||p[d]||a;return r?n.createElement(y,o(o({ref:t},u),{},{components:r})):n.createElement(y,o({ref:t},u))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<a;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},50847:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return b},frontMatter:function(){return f},metadata:function(){return y},toc:function(){return h}});var n=r(3905),i=Object.defineProperty,a=Object.defineProperties,o=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&u(e,r,t[r]);if(c)for(var r of c(t))l.call(t,r)&&u(e,r,t[r]);return e};const f={},d="How to: Create Certificates",y={unversionedId:"manual/SCALE Apps/indepth/certificates",id:"manual/SCALE Apps/indepth/certificates",title:"How to: Create Certificates",description:'At TrueCharts we support HTTPS deployments of every app using our Traefik Reverse Proxy. We support both self-signed, custom and lets-encrypt certificates, using the TrueNAS SCALE building certificate manager. Available under "Credentials"',source:"@site/docs/manual/SCALE Apps/indepth/certificates.md",sourceDirName:"manual/SCALE Apps/indepth",slug:"/manual/SCALE Apps/indepth/certificates",permalink:"/docs/manual/SCALE Apps/indepth/certificates",draft:!1,editUrl:"https://github.com/truecharts/website/tree/master/docs/manual/SCALE Apps/indepth/certificates.md",tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"15 - Accessing PVC Data",permalink:"/docs/manual/SCALE Apps/Quick-Start Guides/pvc-access"},next:{title:"Clustering",permalink:"/docs/manual/SCALE Apps/indepth/clustering"}},m={},h=[{value:"Self Signed certificates",id:"self-signed-certificates",level:2},{value:"Lets-Encrypt Certificates",id:"lets-encrypt-certificates",level:2},{value:"Import existing certificates",id:"import-existing-certificates",level:2}],g={toc:h};function b(e){var t,r=e,{components:i}=r,u=((e,t)=>{var r={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&c)for(var n of c(e))t.indexOf(n)<0&&l.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=p(p({},g),u),a(t,o({components:i,mdxType:"MDXLayout"}))),(0,n.kt)("h1",p({},{id:"how-to-create-certificates"}),"How to: Create Certificates"),(0,n.kt)("p",null,'At TrueCharts we support HTTPS deployments of every app using our Traefik Reverse Proxy. We support both self-signed, custom and lets-encrypt certificates, using the TrueNAS SCALE building certificate manager. Available under "Credentials"'),(0,n.kt)("h2",p({},{id:"self-signed-certificates"}),"Self Signed certificates"),(0,n.kt)("p",null,'Self signed certificates are relatively straight forward and handled by Traefik itself. You just select the default TrueNAS certificate when adding a ingress to your App and Traefik does the rest!\nPlease be aware that these certificates are not really secure, but are "good enough" for testing.'),(0,n.kt)("h2",p({},{id:"lets-encrypt-certificates"}),"Lets-Encrypt Certificates"),(0,n.kt)("p",null,'With the current version of TrueNAS SCALE, it\'s possible to automatically generate certificates for your domain(s) using letsencrypt. However, this process is not very clear, hence we added a short how-to guide as well.\nAfter you managed to complete this, you should be able to select "iX Certificate" as certificate option and your personal certificate in the other drop-down box!'),(0,n.kt)("h2",p({},{id:"import-existing-certificates"}),"Import existing certificates"),(0,n.kt)("p",null,"TrueNAS SCALE also allows you to manually import certificates, this is rather straight forward:\nCopy-Paste the keys into their respective boxes and hit ",(0,n.kt)("inlineCode",{parentName:"p"},"save")))}b.isMDXComponent=!0}}]);