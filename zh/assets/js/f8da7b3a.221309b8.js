"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[66647],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),m=a,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(v,i(i({ref:n},u),{},{components:t})):r.createElement(v,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},76901:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var r=t(83117),a=t(80102),o=(t(67294),t(3905)),i=["components"],l={},c="\u670d\u52a1",s={unversionedId:"manual/development/services",id:"manual/development/services",title:"\u670d\u52a1",description:"\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u9700\u8981\u63a5\u89e6\u5230\u67d0\u4e9b\u4e1c\u897f\uff0c\u6216\u662fUI\u3001API\u6216\u5176\u4ed6\u5bb9\u5668\u3002 oarticles with Kubernetes \u6211\u4eec\u4e0d\u76f4\u63a5\u8fde\u63a5\u5230\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u5668\uff0c \u56e0\u4e3a\u8fd9\u4e9b\u53ef\u80fd\u5728\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u6216\u8005\u5e94\u7528\u53ef\u80fd\u6709\u591a\u4e2a\u201c\u9ad8\u53ef\u7528\u201d\u5bb9\u5668\u3002 \u76f8\u53cd\uff0c\u6211\u4eec\u4f7f\u7528\u6240\u8c13\u7684 \u670d\u52a1\u3002 \u670d\u52a1\u53ea\u662f\u653e\u5728\u201c\u5185\u90e8\u88c5\u914d\u5668\u201d\u4e0a\uff0c\u5b83\u4eec\u4e5f\u4fdd\u8bc1\u53ef\u4ee5\u901a\u8fc7(\u5185\u90e8\uff01) \u5f53\u5065\u5eb7\u68c0\u67e5\u5c1a\u672a\u5b8c\u6210(\u6216\u6b63\u5728\u5931\u8d25)\u65f6\uff0cDNS\u540d\u79f0\u4ee5\u53ca(\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b)\u963b\u6b62\u6d41\u91cf\u62b5\u8fbe\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/manual/development/services.md",sourceDirName:"manual/development",slug:"/manual/development/services",permalink:"/zh/docs/manual/development/services",draft:!1,editUrl:"https://github.com/truecharts/website/tree/master/docs/manual/development/services.md",tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"\u95ee\u9898.yam",permalink:"/zh/docs/manual/development/questions-yaml"},next:{title:"\u5b58\u50a8",permalink:"/zh/docs/manual/development/storage"}},u={},p=[{value:"\u4e24\u79cd\u670d\u52a1",id:"\u4e24\u79cd\u670d\u52a1",level:2},{value:"\u4e3b\u8981\u670d\u52a1",id:"\u4e3b\u8981\u670d\u52a1",level:3}],d={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u670d\u52a1"},"\u670d\u52a1"),(0,o.kt)("p",null,"\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u9700\u8981\u63a5\u89e6\u5230\u67d0\u4e9b\u4e1c\u897f\uff0c\u6216\u662fUI\u3001API\u6216\u5176\u4ed6\u5bb9\u5668\u3002 oarticles with Kubernetes \u6211\u4eec\u4e0d\u76f4\u63a5\u8fde\u63a5\u5230\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5bb9\u5668\uff0c \u56e0\u4e3a\u8fd9\u4e9b\u53ef\u80fd\u5728\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u6216\u8005\u5e94\u7528\u53ef\u80fd\u6709\u591a\u4e2a\u201c\u9ad8\u53ef\u7528\u201d\u5bb9\u5668\u3002 \u76f8\u53cd\uff0c\u6211\u4eec\u4f7f\u7528\u6240\u8c13\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"\u670d\u52a1"),"\u3002 \u670d\u52a1\u53ea\u662f\u653e\u5728\u201c\u5185\u90e8\u88c5\u914d\u5668\u201d\u4e0a\uff0c\u5b83\u4eec\u4e5f\u4fdd\u8bc1\u53ef\u4ee5\u901a\u8fc7(\u5185\u90e8\uff01) \u5f53\u5065\u5eb7\u68c0\u67e5\u5c1a\u672a\u5b8c\u6210(\u6216\u6b63\u5728\u5931\u8d25)\u65f6\uff0cDNS\u540d\u79f0\u4ee5\u53ca(\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b)\u963b\u6b62\u6d41\u91cf\u62b5\u8fbe\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002"),(0,o.kt)("h2",{id:"\u4e24\u79cd\u670d\u52a1"},"\u4e24\u79cd\u670d\u52a1"),(0,o.kt)("h3",{id:"\u4e3b\u8981\u670d\u52a1"},"\u4e3b\u8981\u670d\u52a1"),(0,o.kt)("p",null,"\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u90fd\u9700\u8981\u6709\u4e00\u4e2a\u4e3b\u670d\u52a1\uff0c\u7528\u6237(\u6216\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f!)\u8fde\u63a5\u7684\u4e3b\u8981\u5185\u5bb9\u3002 \u5982\u679c\u5b83\u662f\u4e00\u4e2a webUI, \u4e00\u4e2a API \u3001 \u6570\u636e\u5e93\u8fde\u63a5\u6216\u5b8c\u5168\u662f\u5176\u4ed6\u7684\uff0c\u90a3\u4e48\u5c31\u6ca1\u6709\u592a\u5927\u4e86\u3002\u603b\u662f\u9700\u8981\u4e00\u79cd\u670d\u52a1\u3002"),(0,o.kt)("p",null,"\u8bf7\u8bb0\u4f4f\uff0c\u6bcf\u4e2a\u5e94\u7528\u90fd\u662f\u4e0d\u540c\u7684\uff0c \u4e00\u4e9b\u4eba\u53ea\u6709\u4e00\u4e2a\u670d\u52a1( ",(0,o.kt)("em",{parentName:"p"},"ALWAYS")," \u5fc5\u987b\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),")\uff0c\u53e6\u4e00\u4e9b\u4eba\u9700\u8981\u66f4\u591a\u7684\u670d\u52a1(\u6bcf\u4e2a\u4eba\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u72ec\u7279\u7684\u540d\u79f0)\u3002 \u6bcf\u4e2a\u5e94\u7528\u4e5f\u4f7f\u7528\u4e0d\u540c\u7684\u7aef\u53e3\uff0c\u6240\u4ee5\u8bf7\u76f8\u5e94\u66f4\u6539\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'  - variable: service\n    group: "Networking"\n    label: "Configure Service(s)"\n    schema:\n      type: dict\n      attrs:\n        - variable: main\n          label: "Main Service"\n          description: "The Primary service on which the healthcheck runs, often the webUI"\n          schema:\n            type: dict\n            attrs:\n              - variable: enabled\n                label: "Enable the service"\n                schema:\n                  type: boolean\n                  default: true\n                  hidden: true\n              - variable: type\n                label: "Service Type"\n                description: "ClusterIP\'s are only internally available, nodePorts expose the container to the host node System, Loadbalancer exposes the service using the system loadbalancer"\n                schema:\n                  type: string\n                  default: "NodePort"\n                  enum:\n                    - value: "NodePort"\n                      description: "NodePort"\n                    - value: "ClusterIP"\n                      description: "ClusterIP"\n                    - value: "LoadBalancer"\n                      description: "LoadBalancer"\n              - variable: loadBalancerIP\n                label: "LoadBalancer IP"\n                description: "LoadBalancerIP"\n                schema:\n                  show_if: [["type", "=", "LoadBalancer"]]\n                  type: string\n                  default: ""\n                  required: true\n              - variable: externalIPs\n                label: "External IP\'s"\n                description: "External IP\'s"\n                schema:\n                  show_if: [["type", "=", "LoadBalancer"]]\n                  type: list\n                  default: []\n                  items:\n                    - variable: externalIP\n                      label: "External IP"\n                      required: true\n                      schema:\n                        type: string\n              - variable: ports\n                label: "Service\'s Port(s) Configuration"\n                schema:\n                  type: dict\n                  attrs:\n                    - variable: main\n                      label: "Main Service Port Configuration"\n                      schema:\n                        type: dict\n                        attrs:\n                          - variable: enabled\n                            label: "Enable the port"\n                            schema:\n                              type: boolean\n                              default: true\n                              hidden: true\n                          - variable: protocol\n                            label: "Port Type"\n                            schema:\n                              type: string\n                              default: "HTTP"\n                              hidden: false\n                              enum:\n                                - value: HTTP\n                                  description: "HTTP"\n                                - value: "HTTPS"\n                                  description: "HTTPS"\n                                - value: TCP\n                                  description: "TCP"\n                                - value: "UDP"\n                                  description: "UDP"\n                          - variable: port\n                            label: "Container Port"\n                            schema:\n                              type: int\n                              default: 5076\n                              editable: false\n                              hidden: true\n                          - variable: targetport\n                            label: "Target Port"\n                            description: "This port exposes the container port on the service"\n                            schema:\n                              type: int\n                              default: 5076\n                              editable: true\n                              hidden: false\n                              required: true\n                          - variable: nodePort\n                            label: "Node Port (Optional)"\n                            description: "This port gets exposed to the node. \u4ec5\u5728\u670d\u52a1\u7c7b\u578b\u4e3a NodePort\u201d\n                            schema:\n                              type : int\n                              min: 9000\n                              max: 65535\n                              default: 36041\n                              require: true\n')))}m.isMDXComponent=!0}}]);