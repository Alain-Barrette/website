"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[15153],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),o=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=o(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=o(t),m=a,b=p["".concat(u,".").concat(m)]||p[m]||d[m]||l;return t?r.createElement(b,i(i({ref:n},c),{},{components:t})):r.createElement(b,i({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=p;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var o=2;o<l;o++)i[o]=t[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},60280:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return s},metadata:function(){return o},toc:function(){return d}});var r=t(83117),a=t(80102),l=(t(67294),t(3905)),i=["components"],s={},u="\u4f1a\u8bae",o={unversionedId:"manual/development/ingress",id:"manual/development/ingress",title:"\u4f1a\u8bae",description:"\u4f1a\u8bae\u662f\u6211\u4eec\u5728\u7528\u6237\u754c\u9762\u548c\u6587\u6863\u7684\u7528\u6237\u9762\u4e2d\u6240\u79f0\u7684\u201c\u9006\u5411\u4ee3\u7406\u201d\u3002 \u8bf7\u6ce8\u610f\u90a3\u4e9b\u6307\u540c\u4e00\u7cfb\u7edf\u3002 \u7b80\u5355\u5730\u8bf4\uff0c\u4ec5\u4ec5\u662fKubernetes\u8fde\u63a5\u5916\u9762\u548c\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/manual/development/ingress.md",sourceDirName:"manual/development",slug:"/manual/development/ingress",permalink:"/zh/docs/manual/development/ingress",draft:!1,editUrl:"https://github.com/truecharts/website/tree/master/docs/manual/development/ingress.md",tags:[],version:"current",frontMatter:{},sidebar:"manualSidebar",previous:{title:"\u547d\u4ee4\u652f\u7968\u8868",permalink:"/zh/docs/manual/development/handycommands"},next:{title:"\u95e8\u6237\u6309\u94ae",permalink:"/zh/docs/manual/development/portal"}},c={},d=[{value:"\u6279\u53d1\u7c7b\u578b",id:"\u6279\u53d1\u7c7b\u578b",level:2},{value:"\u4f1a\u8bae\u548c\u670d\u52a1",id:"\u4f1a\u8bae\u548c\u670d\u52a1",level:3},{value:"\u4e3b\u8981\u5927\u4f1a",id:"\u4e3b\u8981\u5927\u4f1a",level:3},{value:"\u6807\u51c6/\u5b9e\u4f8b",id:"\u6807\u51c6\u5b9e\u4f8b",level:3},{value:"HTTP Incongress",id:"http-incongress",level:4},{value:"TCP Incongress",id:"tcp-incongress",level:4},{value:"UDP \u8fdb\u5316",id:"udp-\u8fdb\u5316",level:4},{value:"\u5176\u4ed6\u53ef\u9009\u65b9\u6848",id:"\u5176\u4ed6\u53ef\u9009\u65b9\u6848",level:3},{value:"\u670d\u52a1\u7aef\u53e3",id:"\u670d\u52a1\u7aef\u53e3",level:4},{value:"serviceKind",id:"servicekind",level:4},{value:"\u5916\u90e8\u670d\u52a1",id:"\u5916\u90e8\u670d\u52a1",level:3}],p={toc:d};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u4f1a\u8bae"},"\u4f1a\u8bae"),(0,l.kt)("p",null,"\u4f1a\u8bae\u662f\u6211\u4eec\u5728\u7528\u6237\u754c\u9762\u548c\u6587\u6863\u7684\u7528\u6237\u9762\u4e2d\u6240\u79f0\u7684\u201c\u9006\u5411\u4ee3\u7406\u201d\u3002 \u8bf7\u6ce8\u610f\u90a3\u4e9b\u6307\u540c\u4e00\u7cfb\u7edf\u3002 \u7b80\u5355\u5730\u8bf4\uff0c\u4ec5\u4ec5\u662fKubernetes\u8fde\u63a5\u5916\u9762\u548c\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u65b9\u6cd5\u3002"),(0,l.kt)("h2",{id:"\u6279\u53d1\u7c7b\u578b"},"\u6279\u53d1\u7c7b\u578b"),(0,l.kt)("p",null,"\u6211\u4eec\u76ee\u524d\u652f\u6301\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 Ingres \u7684 HTTP"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 Traefik IngressRoute (HTTP-IR) \u7684 HTTP"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 Traefik IngressRouteTCP"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 Traefik IngressRouteUDP \u7684 UDP")),(0,l.kt)("p",null,"\u4ece\u95ee\u9898.yaml \u548c UI \u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u53e6\u4e00\u4e2a\u201c\u7c7b\u578b\u201d\u6765\u66f4\u6539\u5b83\u4eec\u3002 \u4f46\u662f\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u201c\u4fb5\u7565\u8def\u7ebf\u548c\u56fd\u4f1a\u201d\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u521b\u4f5c\u8fc7\u7a0b\u3002 \u7eafHTTP \u9519\u8bef\u4e0d\u5fc5\u5728 HTTP IR \u4e2d\u5b58\u5728\u3002"),(0,l.kt)("p",null,"\u540c\u6837\u91cd\u8981\u7684\u662f\u8981\u6ce8\u610f\u5230TCP(\u751a\u81f3\u66f4\u591a\uff1aUDP)\u62e5\u6709\u7684\u9009\u9879\u8f83\u5c11\u3002 \u4e0b\u9762\u7684\u793a\u4f8b\u914d\u7f6e\u57fa\u672c\u4e0a\u5305\u542b\u4e86\u5bf9\u73b0\u6709\u548c\u5408\u7406\u6027\u7684\u6982\u8ff0\u3002"),(0,l.kt)("h3",{id:"\u4f1a\u8bae\u548c\u670d\u52a1"},"\u4f1a\u8bae\u548c\u670d\u52a1"),(0,l.kt)("p",null,"\u5728\u4f60\u5f00\u59cb\u521b\u5efa\u95ee\u9898.yaml\u4e2d\u7684\u6444\u5165\u4e4b\u524d\uff0c\u77e5\u9053\u4ec0\u4e48\u662f\u91cd\u8981\u7684\u3002 \u8fdd\u89c4\u884c\u4e3a\u662f\u9001\u5230\u4ea4\u901a\u5de5\u5177\u4e4b\u5916\u7684\u5730\u65b9\uff0c\u800c\u540e\u8005\u53c8\u5c06\u4ea4\u901a\u8f6c\u5230\u5b9e\u9645\u7684\u96c6\u88c5\u7bb1\u3002"),(0,l.kt)("p",null,"\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u5bb9\u5668\u90fd\u9700\u8981\u77e5\u9053\u5982\u4f55\u63a5\u8fd1\u4ed6\u4eec\u7684\u670d\u52a1\u3002 \u5982\u679c\u4e0d\u8fd9\u6837\u505a\uff0c\u90a3\u5c31\u9519\u4e86\u3002"),(0,l.kt)("p",null,"\u4e3a\u4e86\u786e\u4fdd\u8fd9\u4e00\u70b9\uff0c\u5efa\u8bae\u60a8\u4fdd\u6301\u60a8\u7684\u4fb5\u5165\u540d\u79f0\u4e0e\u60a8\u670d\u52a1\u7684\u540d\u79f0\u76f8\u540c\u3002 \u6211\u4eec\u786e\u4fdd\u5bfc\u5165\u5c06\u81ea\u52a8\u68c0\u6d4b\uff08\u5e76\u8fde\u63a5\u5230\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u670d\u52a1\u7684\u4e3b\u8981\u7aef\u53e3\u3002"),(0,l.kt)("p",null,"\u4f46\uff1a\u5982\u679c\u60a8\u9700\u8981\u505a\u4e0d\u540c\u7684\u4e8b\uff0c\u9700\u8981\u8fde\u63a5\u5230\u989d\u5916\u670d\u52a1\u548c/\u6216\u8fde\u63a5\u5230\u4e8c\u7ea7\u7aef\u53e3\uff0c \u60a8\u53ef\u4ee5\u5728\u95ee\u9898\u4e2d\u624b\u52a8\u8bbe\u7f6e\u670d\u52a1\u540d\u79f0\u548c\u670d\u52a1\u7aef\u53e3\u4e24\u8005\u3002 \u6beb\u5347/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u5976/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b\u987f/\u725b/\u725b\u987f/\u725b\u987f/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/\u725b/ \u7136\u800c\uff0c\u6211\u4eec\u5efa\u8bae\u53ea\u5728\u7edd\u5bf9\u5fc5\u8981\u65f6\u624d\u8fd9\u6837\u505a\uff01"),(0,l.kt)("h3",{id:"\u4e3b\u8981\u5927\u4f1a"},"\u4e3b\u8981\u5927\u4f1a"),(0,l.kt)("p",null,"\u4e3b\u8981\u7684\u56fd\u4f1a\u548c\u4e3b\u8981\u670d\u52a1\u90e8\u95e8\u5728\u6211\u4eec\u7684\u6807\u51c6\u5316\u5de5\u4f5c\u4e2d\u53d1\u6325\u7740\u91cd\u8981\u4f5c\u7528\u3002 \u5728\u4e3b\u8981\u670d\u52a1\u7528\u4e8e\u5065\u5eb7\u68c0\u67e5\u548c\u201c\u95e8\u6237\u201d\u6309\u94ae\u7684\u5730\u65b9\uff0c\u4e3b\u8981\u7684\u4fe1\u606f\u53ea\u662f\u7528\u4e8e\u95e8\u6237\u6309\u94ae\u3002"),(0,l.kt)("p",null,"\u4f46\u662f\uff0c\u7531\u4e8e\u7ef4\u62a4\u8005\u671f\u671b\u65b0\u7684\u529f\u80fd\u4f1a\u8fde\u63a5\u5230\u4e3b\u8981\u670d\u52a1\u548c\u4e3b\u8981\u7528\u9014\uff0c \u5982\u679c\u60a8\u51b3\u5b9a\u7ed5\u8fc7/\u5ffd\u7565\u8fd9\u4e9b\uff0c\u5b83\u5c06\u9020\u6210\u95ee\u9898\u3002"),(0,l.kt)("h3",{id:"\u6807\u51c6\u5b9e\u4f8b"},"\u6807\u51c6/\u5b9e\u4f8b"),(0,l.kt)("p",null,"\u6211\u4eec\u8bd5\u56fe\u4fdd\u6301\u5c3d\u53ef\u80fd\u591a\u7684\u6807\u51c6\u5316\u95ee\u9898.yaml\u683c\u5f0f\uff0c\u4ee5\u786e\u4fdd\uff08\u5168\u65f6\uff09\u7f16\u8f91\u5c3d\u53ef\u80fd\u7b80\u5355\u3002"),(0,l.kt)("h4",{id:"http-incongress"},"HTTP Incongress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'  - variable: ingress\n    label: "Ingress Configuration"\n    group: "Ingress Configuration"\n    schema:\n      type: dict\n      attrs:\n        - variable: main\n          label: "Main Ingress"\n          schema:\n            type: dict\n            attrs:\n              - variable: enabled\n                label: "Enable Ingress"\n                schema:\n                  type: boolean\n                  default: false\n                  show_subquestions_if: true\n                  subquestions:\n                    - variable: hosts\n                      label: "Hosts"\n                      schema:\n                        type: list\n                        default: []\n                        items:\n                          - variable: host\n                            label: "Host"\n                            schema:\n                              type: dict\n                              attrs:\n                                - variable: host\n                                  label: "HostName"\n                                  schema:\n                                    type: string\n                                    default: ""\n                                    required: true\n                                - variable: paths\n                                  label: "Hosts"\n                                  schema:\n                                    type: list\n                                    default: []\n                                    items:\n                                      - variable: path\n                                        label: "path"\n                                        schema:\n                                          type: string\n                                          required: true\n                                          hidden: false\n                                          default: "/"\n                                      - variable: pathType\n                                        label: "pathType"\n                                        schema:\n                                          type: string\n                                          required: true\n                                          hidden: false\n                                          default: "Prefix"\n                    - variable: tls\n                      label: "TLS-Settings"\n                      schema:\n                        type: list\n                        default: []\n                        items:\n                          - variable: hosts\n                            label: "Certificate Hosts"\n                            schema:\n                              type: list\n                              default: []\n                              items:\n                                - variable: host\n                                  label: "Host"\n                                  schema:\n                                    type: string\n                                    default: ""\n                                    required: true\n                          - variable: scaleCERT\n                            label: "Select TrueNAS SCALE Certificate"\n                            schema:\n                              type: int\n                              $ref:\n                                - "definitions/certificate"\n\n')),(0,l.kt)("h4",{id:"tcp-incongress"},"TCP Incongress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'        - variable: tcp\n          label: "TCP Reverse Proxy Configuration"\n          schema:\n            type: dict\n            attrs:\n              - variable: enabled\n                label: "Enable TCP Reverse Proxy"\n                schema:\n                  type: boolean\n                  default: false\n                  show_subquestions_if: true\n                  subquestions:\n                    - variable: type\n                      label: "Select Reverse Proxy Type"\n                      schema:\n                        type: string\n                        default: "TCP"\n                        required: true\n                        editable: false\n                        hidden: true\n                    - variable: serviceName\n                      label: "Service name to proxy to"\n                      schema:\n                        hidden: true\n                        editable: false\n                        type: string\n                        default: ""\n                    - variable: entrypoint\n                      label: "Select Entrypoint"\n                      schema:\n                        type: string\n                        default: "torrent-tcp"\n                        required: true\n                        enum:\n                          - value: "torrent-tcp"\n                            description: "Torrent-TCP: port 51413"\n')),(0,l.kt)("h4",{id:"udp-\u8fdb\u5316"},"UDP \u8fdb\u5316"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'        - variable: udp\n          label: "UDP Reverse Proxy Configuration"\n          schema:\n            type: dict\n            attrs:\n              - variable: enabled\n                label: "Enable UDP Reverse Proxy"\n                schema:\n                  type: boolean\n                  default: false\n                  show_subquestions_if: true\n                  subquestions:\n                    - variable: type\n                      label: "Select Reverse Proxy Type"\n                      schema:\n                        type: string\n                        default: "UDP"\n                        required: true\n                        editable: false\n                        hidden: true\n                    - variable: serviceName\n                      label: "Service name to proxy to"\n                      schema:\n                        hidden: true\n                        editable: false\n                        type: string\n                        default: ""\n                    - variable: entrypoint\n                      label: "Select Entrypoint"\n                      schema:\n                        type: string\n                        default: "torrent-udp"\n                        required: true\n                        enum:\n                          - value: "torrent-udp"\n                            description: "Torrent-UDP: port 51413"\n')),(0,l.kt)("h3",{id:"\u5176\u4ed6\u53ef\u9009\u65b9\u6848"},"\u5176\u4ed6\u53ef\u9009\u65b9\u6848"),(0,l.kt)("p",null,"\u8fd8\u6709\u51e0\u79cd\u5176\u4ed6\u9009\u9879\u5f88\u5c11\u4f7f\u7528(\u5982\u679c\u6709\u7684\u8bdd)\u3002"),(0,l.kt)("h4",{id:"\u670d\u52a1\u7aef\u53e3"},"\u670d\u52a1\u7aef\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"                     - \u53d8\u91cf\uff1aservicePort\n                       \u6807\u7b7e\uff1a\u201c\u670d\u52a1\u7aef\u53e3\u5230\u4ee3\u7406\u201d\n                       schema\uff1a\n                         \u9690\u85cf\uff1atrue\n                         \u53ef\u7f16\u8f91\uff1afalse\n                         \u7c7b\u578b\uff1aint\n                         \u9ed8\u8ba4\u503c\uff1a80\n")),(0,l.kt)("h4",{id:"servicekind"},"serviceKind"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'                    - \u53d8\u91cf: serviceKind\n                      label: "Service Kind to proxy to"\n                      schema:\n                        \u9690\u85cf: true\n                        \u53ef\u7f16\u8f91: false\n                        type : string\n                        default: ""\n')),(0,l.kt)("h3",{id:"\u5916\u90e8\u670d\u52a1"},"\u5916\u90e8\u670d\u52a1"),(0,l.kt)("p",null,"\u5916\u90e8\u670d\u52a1\u7684\u9009\u62e9\u5b9e\u9645\u4e0a\u4e3b\u8981\u662f\u4e00\u79cd\u201c\u5934\u8111\u4e0b\u201d\uff0c\u800c\u8fd9\u79cd\u670d\u52a1\u53ea\u80fd\u521b\u9020\u4e00\u79cd\u5f88\u5c0f\u7684(\u6700\u4f4e)\u670d\u52a1\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},'  - variable: externalServices\n    label: "(Advanced) Add External Services"\n    group: "Advanced"\n    schema:\n      type: list\n      default: []\n      items:\n        - variable: externalService\n          label: "External Service"\n          schema:\n            type: dict\n            attrs:\n              - variable: enabled\n                label: "Enable Web Reverse Proxy"\n                schema:\n                  type: boolean\n                  hidden: true\n                  editable: false\n                  default: true\n              - variable: type\n                label: "Reverse Proxy Type"\n                schema:\n                  type: string\n                  default: "HTTP"\n                  hidden: true\n                  editable: false\n                  required: true\n              - variable: serviceName\n                label: "Service name to proxy to"\n                schema:\n                  hidden: true\n                  editable: false\n                  type: string\n                  default: ""\n              - variable: serviceTarget\n                label: "IP Address of the external service"\n                schema:\n                  hidden: false\n                  editable: true\n                  required: true\n                  type: string\n                  default: "192.168.0.0"\n              - variable: servicePort\n                label: "External Service Port"\n                description: "The port on the external service you want to proxy"\n                schema:\n                  hidden: false\n                  required: true\n                  editable: true\n                  type: int\n                  default: 80\n              - variable: serviceType\n                label: "Connection Type"\n                description: "Connection Type between Traefik and the external service"\n                schema:\n                  hidden: false\n                  editable: true\n                  required: true\n                  default: "HTTP"\n                  type: string\n                  enum:\n                    - value: "HTTP"\n                      description: "HTTP"\n                    - value: "HTTPS"\n                      description: "HTTPS"\n              - variable: serviceKind\n                label: "Service Kind to proxy to"\n                schema:\n                  hidden: true\n                  editable: false\n                  type: string\n                  default: ""\n              - variable: entrypoint\n                label: "Select Entrypoint"\n                schema:\n                  type: string\n                  default: "websecure"\n                  required: true\n                  enum:\n                    - value: "websecure"\n                      description: "Websecure: HTTPS/TLS port 443"\n              - variable: host\n                label: "Domain Name"\n                required: true\n                schema:\n                  type: string\n              - variable: path\n                label: "path"\n                schema:\n                  type: string\n                  required: true\n                  hidden: false\n                  default: "/"\n              - variable: certType\n                label: "Select Certificate Type"\n                schema:\n                  type: string\n                  default: "selfsigned"\n                  enum:\n                    - value: ""\n                      description: "No Encryption/TLS/Certificates"\n                    - value: "selfsigned"\n                      description: "Self-Signed Certificate"\n                    - value: "ixcert"\n                      description: "TrueNAS SCALE Certificate"\n              - variable: certificate\n                label: "Select TrueNAS SCALE Certificate"\n                schema:\n                  type: int\n                  show_if: [["certType", "=", "ixcert"]]\n                  $ref:\n                    - "definitions/certificate"\n              - variable: authForwardURL\n                label: "Forward Authentication URL"\n                schema:\n                  type: string\n                  default: ""\n')))}m.isMDXComponent=!0}}]);