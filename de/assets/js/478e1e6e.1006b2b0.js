"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[73112],{3905:function(e,n,r){r.d(n,{Zo:function(){return c},kt:function(){return d}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function u(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),l=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(s.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(r),d=i,m=p["".concat(s,".").concat(d)]||p[d]||h[d]||a;return r?t.createElement(m,o(o({ref:n},c),{},{components:r})):t.createElement(m,o({ref:n},c))}));function d(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var l=2;l<a;l++)o[l]=r[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},95550:function(e,n,r){r.r(n),r.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return h}});var t=r(83117),i=r(80102),a=(r(67294),r(3905)),o=["components"],u={slug:"Einf\xfchrung: TrueCharts Container Repository",title:"Einf\xfchrung: TrueCharts Container Repository",authors:["ornias"]},s=void 0,l={permalink:"/de/blog/Einf\xfchrung: TrueCharts Container Repository",source:"@site/i18n/de/docusaurus-plugin-content-blog/24-01-2022-introducing-tccr.md",title:"Einf\xfchrung: TrueCharts Container Repository",description:"Im letzten Jahr haben wir uns immer schneller entwickelt, indem wir Code und Benutzer alle paar Monate verdoppeln. Einige Probleme konnten schnell und einfach behoben werden, w\xe4hrend andere Probleme viel komplexer waren. Eines dieser Probleme war das verworrene Chaos verschiedener Containerquellen.",date:"2022-07-18T09:32:02.000Z",formattedDate:"18. Juli 2022",tags:[],readingTime:1.295,hasTruncateMarker:!1,authors:[{name:"Kjeld Schouten-Lebbing",title:"Gr\xfcnder von TrueCharts",url:"https://github.com/Ornias",imageURL:"https://github.com/Ornias.png",key:"ornias"}],frontMatter:{slug:"Einf\xfchrung: TrueCharts Container Repository",title:"Einf\xfchrung: TrueCharts Container Repository",authors:["ornias"]},prevItem:{title:"TrueCharts treffen - der erste App Store f\xfcr TrueNAS SCALE",permalink:"/de/blog/TrueCharts treffen - der erste App Store f\xfcr TrueNAS SCALE"}},c={authorsImageUrls:[void 0]},h=[],p={toc:h};function d(e){var n=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Im letzten Jahr haben wir uns immer schneller entwickelt, indem wir Code und Benutzer alle paar Monate verdoppeln. Einige Probleme konnten schnell und einfach behoben werden, w\xe4hrend andere Probleme viel komplexer waren. Eines dieser Probleme war das verworrene Chaos verschiedener Containerquellen."),(0,a.kt)("p",null,"Diese Containerquellen hatten alle verschiedene Tag-Formate, Bewertungsbeschr\xe4nkungen, Ausfallzeiten und man entschied sich sogar, Tags zu l\xf6schen, was zu einer Unterbrechung der Anwendungen f\xfchrte. Dies war nat\xfcrlich nicht die Erfahrung, die wir unseren Nutzern zukommen lassen wollten."),(0,a.kt)("p",null,"Deshalb haben wir die bessere Zeit im Dezember damit verbracht, ein eigenes Containerverteilungssystem einzurichten. Das TrueCharts Container Repository oder TCCR kurz. TCCR ist eine Kombination von Containern, die wir selbst und Container gebaut haben, die wir in einem standardisierten Format spiegeln, abschirmen und neu markieren. Dies erm\xf6glichte es uns auch, ",(0,a.kt)("em",{parentName:"p"},"alle")," Container aus mehreren Quellen zur Verf\xfcgung zu stellen: GHCR, Quay und DockerHub."),(0,a.kt)("p",null,"Um dies zu erreichen, haben wir uns mit Schal verbunden. h, was uns erlaubt, einfach zwischen Containerquellen f\xfcr unser Repository zu wechseln und uns auch etwas Neues zu geben: Metriken. Wir k\xf6nnen endlich sehen, welche Container popul\xe4r sind und welche nicht. aber wir k\xf6nnen auch sehen, ob es noch Leute gibt, die \xe4ltere Versionen von Anwendungen verwenden. Dies erm\xf6glicht es uns, unseren Entscheidungsprozess zu verbessern: an welchen Apps zu arbeiten ist und an welchen \xe4lteren Versionen sie weiterhin unterst\xfctzt werden."),(0,a.kt)("p",null,"Sie alle haben (unter der Haube) bereits TCCR betrieben und wir hatten nur eine Handvoll von Problemen, die damit zusammenh\xe4ngen. Wir freuen uns, etwas geschaffen zu haben, das uns erneut als die Nummer 1 der TrueNAS SCALE Applikationen hervorhebt."))}d.isMDXComponent=!0}}]);